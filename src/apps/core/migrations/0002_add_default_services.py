# Generated by Django 5.2.4 on 2025-08-10 11:10

from django.db import migrations


def add_default_services(apps, schema_editor):
    """Add default services if they don't exist."""
    Service = apps.get_model("core", "Service")
    
    services = [
        {
            "name": "Home Assistant",
            "description": "Smart home automation platform for controlling lights, sensors, and devices",
            "url": "https://homeassistant.home.xn--wersdrfer-47a.de/",
            "icon": "fas fa-home",
            "order": 1,
        },
        {
            "name": "Nyxmon",
            "description": "System monitoring and metrics dashboard for homelab infrastructure",
            "url": "https://nyxmon.home.xn--wersdrfer-47a.de/",
            "icon": "fas fa-chart-line",
            "order": 2,
        },
        {
            "name": "Unifi",
            "description": "Self-hosted network controller for managing WiFi access points and switches",
            "url": "https://unifi.home.xn--wersdrfer-47a.de/",
            "icon": "fas fa-network-wired",
            "order": 3,
        },
    ]
    
    for service_data in services:
        Service.objects.get_or_create(
            name=service_data["name"],
            defaults=service_data
        )


def remove_default_services(apps, schema_editor):
    """Remove default services (for migration reversal)."""
    Service = apps.get_model("core", "Service")
    Service.objects.filter(name__in=["Home Assistant", "Nyxmon", "Unifi"]).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_default_services, remove_default_services),
    ]
